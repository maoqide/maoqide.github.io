<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Maoqide</title>
    <link>/post/</link>
    <description>Recent content in Posts on Maoqide</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Sun, 27 Oct 2019 11:24:01 +0800</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Build Docker Image in a Pod in Kubernetes</title>
      <link>/post/cloud/build-docker-image-in-a-pod-in-kubernetes/</link>
      <pubDate>Sun, 27 Oct 2019 11:24:01 +0800</pubDate>
      
      <guid>/post/cloud/build-docker-image-in-a-pod-in-kubernetes/</guid>
      <description>&lt;p&gt;利用 &lt;a href=&#34;https://github.com/GoogleContainerTools/kaniko&#34;&gt;kaniko&lt;/a&gt; 在 kubernetes 集群中使用 pod 来进行镜像构建，并 push 到镜像仓库中。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kubernetes Monitoring</title>
      <link>/post/practice/kubernetes-monitoring/</link>
      <pubDate>Wed, 25 Sep 2019 10:15:26 +0800</pubDate>
      
      <guid>/post/practice/kubernetes-monitoring/</guid>
      <description>&lt;p&gt;完整的记录 kubernetes 监控从部署到配置。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Glusterfs Kubernetes</title>
      <link>/post/cloud/glusterfs-kubernetes/</link>
      <pubDate>Fri, 06 Sep 2019 08:46:14 +0800</pubDate>
      
      <guid>/post/cloud/glusterfs-kubernetes/</guid>
      <description>&lt;p&gt;在 kubernetes 中使用 glusterfs 作为 pv。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kubernetes Webshell</title>
      <link>/post/cloud/kubernetes-webshell/</link>
      <pubDate>Sun, 11 Aug 2019 11:32:17 +0800</pubDate>
      
      <guid>/post/cloud/kubernetes-webshell/</guid>
      <description>&lt;p&gt;通过 client-go 提供的方法，实现通过网页进入 kubernetes pod 的终端操作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Upgrade Kubernets From Binary to Kubeadm</title>
      <link>/post/notes/upgrade-kubernets-from-binary-to-kubeadm/</link>
      <pubDate>Tue, 06 Aug 2019 13:55:04 +0800</pubDate>
      
      <guid>/post/notes/upgrade-kubernets-from-binary-to-kubeadm/</guid>
      <description>&lt;p&gt;记一次从二进制部署的 k8s 集群 到 kubeadm 部署的 k8s 迁移测试。&lt;br /&gt;
原有 k8s 集群为二进制形式部署，集群管理不太方便，准备在集群升级的机会，将集群部署方式改为 kubeadm部署，本文记录测试迁移的过程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go Concurrency</title>
      <link>/post/golang/go-concurrency/</link>
      <pubDate>Sat, 20 Jul 2019 21:38:08 +0800</pubDate>
      
      <guid>/post/golang/go-concurrency/</guid>
      <description>&lt;p&gt;go 语言相比其他语言的一大优势，就是便捷，高效的并发代码的编写。本文具体介绍 go 语言的并发机制和使用 go 语言作并发编程的方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kubelet-1 Kubelet 会做些什么</title>
      <link>/post/cloud/kubelet-1-what-do-kubelet-do/</link>
      <pubDate>Sun, 14 Jul 2019 11:30:24 +0800</pubDate>
      
      <guid>/post/cloud/kubelet-1-what-do-kubelet-do/</guid>
      <description>&lt;p&gt;Kubelet 是 Kubernetes 集群中非常重要的组件，起在集群中的每个几点上，具体 Kubelet 会做那些事情，可以通过 Kubelet 的源码找到答案。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Go Memory Model</title>
      <link>/post/golang/the-go-memory-model/</link>
      <pubDate>Wed, 19 Jun 2019 09:10:37 +0800</pubDate>
      
      <guid>/post/golang/the-go-memory-model/</guid>
      <description>&lt;p&gt;[译]&lt;a href=&#34;https://golang.google.cn/ref/mem&#34;&gt;https://golang.google.cn/ref/mem&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Go内存模型指定了一个条件，在该条件下，可以保证在一个 goroutine 中读取变量，能够获取到另一个不同 goroutine 写入同一变量产生的值。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang Data Race Detector</title>
      <link>/post/golang/golang-data-race-detector/</link>
      <pubDate>Tue, 18 Jun 2019 09:26:13 +0800</pubDate>
      
      <guid>/post/golang/golang-data-race-detector/</guid>
      <description>&lt;p&gt;[译] &lt;a href=&#34;https://golang.google.cn/doc/articles/race_detector.html&#34;&gt;https://golang.google.cn/doc/articles/race_detector.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;golang 中的几种 Data Race 场景及 Data Race 检测工具。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Deploy Mysql on Kubernetes</title>
      <link>/post/cloud/deploy-mysql-on-kubernetes/</link>
      <pubDate>Thu, 16 May 2019 14:06:37 +0800</pubDate>
      
      <guid>/post/cloud/deploy-mysql-on-kubernetes/</guid>
      <description>&lt;p&gt;本文通过 &lt;a href=&#34;https://github.com/oracle/mysql-operator&#34;&gt;mysql-operator&lt;/a&gt; 在kubernetes集群部署高可用的mysql statefulset。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sample Controller</title>
      <link>/post/cloud/sample-controller/</link>
      <pubDate>Mon, 18 Mar 2019 12:53:41 +0800</pubDate>
      
      <guid>/post/cloud/sample-controller/</guid>
      <description>&lt;p&gt;自己构建 sample-controller.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Building an Operator for Kubernetes With the Sample Controller</title>
      <link>/post/cloud/building-an-operator-for-kubernetes-with-the-sample-controller/</link>
      <pubDate>Sat, 16 Mar 2019 21:34:46 +0800</pubDate>
      
      <guid>/post/cloud/building-an-operator-for-kubernetes-with-the-sample-controller/</guid>
      <description>&lt;pre&gt;&lt;code&gt;An Operator is an application-specific controller that extends the Kubernetes API to create, configure, and manage instances of complex stateful applications on behalf of a Kubernetes user.     
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Operator 是一个特定的应用程序的控制器，通过扩展 Kubernetes API 以代表 Kubernetes 用户创建，配置和管理复杂有状态应用程序的实例。&lt;br /&gt;
Operator 是一种软件，它结合了特定的领域知识并通过 CRD(Custom Resource Definition ) 机制扩展了Kubernetes API，使用户像管理 Kubernetes 的内置资源一样创建，配置和管理应用程序。Operator 管理整个集群中的多个实例，而不仅仅管理应用程序的单个实例。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang Mutex</title>
      <link>/post/golang/golang-mutex/</link>
      <pubDate>Mon, 11 Mar 2019 16:35:20 +0800</pubDate>
      
      <guid>/post/golang/golang-mutex/</guid>
      <description>&lt;p&gt;golang 的&lt;code&gt;sync&lt;/code&gt;包中有两种锁，互斥锁&lt;code&gt;sync.Mutex&lt;/code&gt; 和读写锁&lt;code&gt;sync.RWMutex&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kube Scheduler 源码阅读</title>
      <link>/post/cloud/kube-scheduler-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/</link>
      <pubDate>Thu, 07 Mar 2019 20:00:30 +0800</pubDate>
      
      <guid>/post/cloud/kube-scheduler-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/</guid>
      <description>&lt;p&gt;k8s kube-scheduler 源码阅读笔记&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Controller Manager 源码阅读</title>
      <link>/post/cloud/controller-manager-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/</link>
      <pubDate>Sat, 23 Feb 2019 16:52:30 +0800</pubDate>
      
      <guid>/post/cloud/controller-manager-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/</guid>
      <description>&lt;p&gt;k8s controller-manager 源码阅读笔记&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Awesome Post Collection 2</title>
      <link>/post/awesome-post/collection-2/</link>
      <pubDate>Wed, 20 Feb 2019 10:51:58 +0800</pubDate>
      
      <guid>/post/awesome-post/collection-2/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;goroutine 调度器。&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Golang &lt;code&gt;for range&lt;/code&gt;性能分析及优化。&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;一致性哈希算法。&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;ETCD的一些使用场景及原理分析。&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Container Network</title>
      <link>/post/cloud/container-network/</link>
      <pubDate>Tue, 22 Jan 2019 17:28:28 +0800</pubDate>
      
      <guid>/post/cloud/container-network/</guid>
      <description>&lt;p&gt;容器间通信可分为跨主机和同主机间的通信，同主机主要通过 docker 本身的默认 docker0 即可，跨主机通信则相对复杂一些。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker 原理</title>
      <link>/post/cloud/docker-%E5%8E%9F%E7%90%86/</link>
      <pubDate>Thu, 17 Jan 2019 14:08:37 +0800</pubDate>
      
      <guid>/post/cloud/docker-%E5%8E%9F%E7%90%86/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Namespace&lt;/li&gt;
&lt;li&gt;Cgroup&lt;/li&gt;
&lt;li&gt;UnionFS&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;docker 的实现，主要依赖 linux 的 namespace、cgroup 和 unionFS 三种技术实现，达到容器的环境隔离、资源控制和镜像打包。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>将网站部署在 Kubernetes 上</title>
      <link>/post/notes/publish-your-site-on-k8s/</link>
      <pubDate>Tue, 01 Jan 2019 17:04:25 +0800</pubDate>
      
      <guid>/post/notes/publish-your-site-on-k8s/</guid>
      <description>&lt;p&gt;将自己的博客网站发布到自己的 Kubernetes 集群上。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Goroutine 的管理</title>
      <link>/post/golang/goroutine/</link>
      <pubDate>Fri, 28 Dec 2018 16:29:32 +0800</pubDate>
      
      <guid>/post/golang/goroutine/</guid>
      <description>&lt;p&gt;goroutine 是 go 的最重要特性之一，可以方便的实现并发编程。但是真正用起来，如果不多加注意，很容易造成 goroutine 的泄漏或者脱离管理，造成代码跑一段时间，就是产生大量无法回收的goroutine(可通过 &lt;a href=&#34;https://golang.org/pkg/net/http/pprof/&#34;&gt;pprof&lt;/a&gt; 查看)。最近学习整理了下 go 语言中管理 goroutine 的几种方法和一些最佳实践。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Basic Data Structure</title>
      <link>/post/algorithm/basic-data-structure/</link>
      <pubDate>Fri, 07 Dec 2018 16:31:03 +0800</pubDate>
      
      <guid>/post/algorithm/basic-data-structure/</guid>
      <description>&lt;p&gt;基础的数据结构和一些基本操作，及其 golang 语言的实现。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Build Blog With Hugo</title>
      <link>/post/notes/build-blog-with-hugo/</link>
      <pubDate>Tue, 04 Dec 2018 18:37:11 +0800</pubDate>
      
      <guid>/post/notes/build-blog-with-hugo/</guid>
      <description>&lt;p&gt;how to build your own blog using hugo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Awesome Post Collection 1</title>
      <link>/post/awesome-post/collection-1/</link>
      <pubDate>Mon, 03 Dec 2018 21:38:12 +0800</pubDate>
      
      <guid>/post/awesome-post/collection-1/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Mesos 的资源分配。&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Kubernetes调度详解。&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Istio 调用链埋点/tracing。&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;kubernetes informer 解析。&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Apiserver 源码阅读</title>
      <link>/post/cloud/apiserver-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/</link>
      <pubDate>Wed, 21 Nov 2018 19:46:06 +0800</pubDate>
      
      <guid>/post/cloud/apiserver-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/</guid>
      <description>&lt;p&gt;k8s apiserver 源码阅读笔记&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kubelet</title>
      <link>/post/cloud/kubelet-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/</link>
      <pubDate>Wed, 21 Nov 2018 18:48:01 +0800</pubDate>
      
      <guid>/post/cloud/kubelet-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/</guid>
      <description>&lt;p&gt;Kubelet 源码阅读笔记&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>阿里云主机搭建 K8S 集群</title>
      <link>/post/cloud/deploy-kubernetes-on-aliyun/</link>
      <pubDate>Wed, 14 Nov 2018 14:31:38 +0800</pubDate>
      
      <guid>/post/cloud/deploy-kubernetes-on-aliyun/</guid>
      <description>&lt;p&gt;通过阿里云ECS实例搭建K8S集群&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>